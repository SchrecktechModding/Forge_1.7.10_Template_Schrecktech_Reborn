buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			url = "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
		classpath 'de.undercouch:gradle-download-task:3.2.0'
		classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
	}
}

// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:deprecation"
	}
}

apply plugin: 'eclipse'
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'idea'
idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'forge'
apply plugin: "com.wynprice.cursemaven"

// Define properties file
ext.configFile = file "build.properties"

version = "0.0.0"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = ".minecraft"
	mappings = "stable_12"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	maven {
		name = 'Curseforge Maven'
		url = 'http://minecraft.curseforge.com/api/maven/'
	}
	maven {
		name = "forge"
		url = "https://files.minecraftforge.net/maven/"
	}
	maven {
		name = "gt"
		url = "http://gregtech.overminddl1.com/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
	maven {
		name = "Apple"
		url ="http://www.ryanliptak.com/maven/"
	}
	maven {
		name = 'progwml6'
		url = 'https://dvs1.progwml6.com/files/maven/'
	}
	maven { //chisel
		name = "Tterrag"
		url = "http://maven.tterrag.com/"
	}
	maven {
		name = "OpenComputers Repo"
		url = "http://maven.cil.li/"
	}
	maven {
		name = "bdew"
		url = "https://jenkins.bdew.net/maven/"
	}
	maven {
		name = "codingLib"
		url = "http://api.dmodoomsirius.me/"
	}
	maven {
		name = "gorymoon"
		url = "https://gorymoon.se/maven/"
	}
}

dependencies {
/*  `compile` means it is both compiled with and run with `run*`
	`compileOnly` means it is only used to compile with but not run in dev via run*

	real example
	compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

	for more info...
	http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
	http://www.gradle.org/docs/current/userguide/dependency_management.html
*/

	// Reborn Base mods.
	// if you find better repos, please make a pull request!
	compile "curse.maven:AIImprovements-1.7.10-0.0.1b19-dev:2252676"
	compile "applecore:AppleCore:1.7.10-3.1.1:deobf"
	compile "appeng:appliedenergistics2:rv3-beta-6:dev"
	compile "curse.maven:ArchitectureCraft-1.7.2-mc1.7.10:2352554"
	compile "aroma1997core:Aroma1997Core:1.7.10:1.0.2.16"
	compile "aromabackup:AromaBackup:1.7.10:0.1.0.0"
	compile "aroma1997s-dimensional-world:Aroma1997s-Dimensional-World:1.7.10:1.1.0.1"
	compile "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
	compile "net.bdew:bdlib:1.9.4.109-mc1.7.10"
	compile "curse.maven:BetterBuildersWands-0.8.1-1.7.10r92+aec06c3-dev:2356821"
	compile "curse.maven:biggerpacketsplz-upto1.7.10-1.2:2655844"
	compile "curse.maven:bigtrees-0.2-1.7.10:2273910"
	compile "binnie:binnie-mods:1.7.10-2.0.22:dev"
	compile "com.github.glitchfiend.biomesoplenty:BiomesOPlenty:1.7.10-2.1.0.2308:deobf"
	compile files("lib/BrandonsCore-1.0.0.12.jar")
	compile "curse.maven:Carpenter's Blocks v3.3.8.2 - MC 1.7.10:2719376"
	compile "chisel:Chisel:2.9.5.11:deobf"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:ForgeMultipart:1.7.10-1.2.0.347:dev"
	compile "com.builtbroken.codinglib:CodingLib:0.2.8b54"
	compile "cofh:CoFHCore:1.7.10R3.0.4:dev"
	compile "cofh:CoFHLib:1.7.10R3.0.3:dev"
	compile "controlling:Controlling:1.7.10:1.0.0"
	compile "curse.maven:cookingbook-mc1.7.10-1.0.140:2299135"
	compile "coroutil:coroutil:1.7.10:1.1.6"
	compile "crafting-tweaks:craftingtweaks:mc1.7.10:1.0.88"
	compile "curse.maven:CraftTweaker-1.7.10-3.1.0-legacy:2838720"
	compile "curse.maven:Draconic-Evolution-1.7.10-1.0.2h-deobf:2313452"
	compile "curse.maven:EnchantingPlus-1.7.10-3.0.2-d:2218324"
	compile "curse.maven:EnhancedPortals-1.7.10-universal-3.0.12:2242378"
	compile "curse.maven:externaltweaker-1.7.10-FINAL-0.3:2452853"
	compile "curse.maven:extrabiomesxl.1.7.10-3.16.4:2273301"
	compile "extracells:ExtraCells:1.7.10-2.3.14b200:deobf"
	compile "curse.maven:extrautilities-1.2.12-deobf:2264384"
	compile "farseek:Farseek:1.7.10:2.0.1"
	compile "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
	compile "com.amadornes.framez:Framez:1.7.10-0.2-33:deobf"
	compile "se.gory_moon:GlobalGameRules:1.7.10-1.0"
	compile files("lib/gregtech-5.09.32pre6.jar")
	compile files("lib/GT-PlusPlus-1.7.04.483-dev.jar")
	compile files("lib/GTTweaker-1.7.10-1.7.2.jar")
	compile "hardcore-darkness:HardcoreDarkness:MC1.7.10:1.7"
	compile "curse.maven:HelpFixer-1.0.7:2223813"
	compile "nuclear-control-2:IC2NuclearControl:2.4.3a:dev"
	compile "ichunutil:iChunUtil:4.2.3:deobf"
	compile "net.industrial-craft:industrialcraft-2:2.2.828-experimental:dev"
	compile "atomicstrykers-infernal-mobs:InfernalMobs:1.7.10"
	compile "infini-tic:Infini-TiC:1.7.10:0.1.5.DEV.324b697"
	compile "curse.maven:INpureCore-[1.7.10]1.0.0B9-62:2238507"
	compile "curse.maven:InventoryTweaks-1.59-dev-152:2210792"
	compile "iron-chests:ironchest-1.7.10:6.0.62.742:universal"
	compile "mcp.mobius.jabba:Jabba:1.2.2_1.7.10:dev"
	compile "journeymap:journeymap-1.7.10:5.1.4p2:unlimited"
	compile "magic-bees:magicbees:1.7.10:2.4.4"
	compile "curse.maven:malisiscore-1.7.10-0.14.3-dev:2283268"
	compile "curse.maven:malisisdoors-1.7.10-1.13.2-dev:2284381"
	compile "mantle:Mantle:1.7.10:0.3.2b"
	compile "minetweaker-recipemaker:MineTweakerRecipeMaker:1.7.10:1.1.1"
	compile "curse.maven:MobAmputation-4.0.1:2239204"
	compile "curse.maven:MobDismemberment-4.0.0:2232121"
	compile "curse.maven:Modpack Configuration Checker-1.7.10-v1.5.3:2713414"
	compile "curse.maven:MoreChisels-1.7.10-1.0.28-deobf:2263982"
	compile "morpheus:Morpheus:1.7.10:1.6.21"
	compile "mouse-tweaks:MouseTweaks:2.4.4:mc1.7.10"
	compile "natura:natura:1.7.10:2.2.1a2"
	compile "natures-compass:NaturesCompass:1.7.10:1.3.1"
	compile "curse.maven:Neat 1.0-1:2268525"
	compile "netherportalfix:netherportalfix:mc1.7.10:1.1.0"
	compile "curse.maven:NoMoreRecipeConflict-0.3(1.7.10):2267374"
	compile "curse.maven:NotEnoughIDs-1.4.2-deobf:2275081"
	compile "curse.maven:NotEnoughItems-1.7.10-2.0.1-GTNH-universal:2906319"
	compile "curse.maven:NotEnoughKeys-1.7.10.3.0.0b45.dev-universal:2276280"
	compile "curse.maven:NotEnoughResources-1.7.10-0.1.0-128:2323485"
	compile "openblocks:OpenBlocks:1.7.10-1.6-1.7.10:deobf"
	compile "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
	compile "openmods:OpenModsLib:1.7.10-0.10:deobf"
	compile "curse.maven:OpenModularTurrets-1.7.10-2.2.11-245:2549788"
	compile "p455w0rds-library:p455w0rdslib:1.7.10:1.0.4"
	compile "curse.maven:Pam's Get all the Seeds 1.7.10a:2245851"
	compile "curse.maven:Pam's Harvest the Nether 1.7.10a:2241397"
	compile "curse.maven:Pam's HarvestCraft 1.7.10Lb:2270206"
	//compile "curse.maven:PerfectSpawn-1.1:2212916" buggy mcp
	compile "practical-logistics:Practical-Logistics-1.7.10:0.2.4:dev"
	compile "mrtjp:ProjectRed:1.7.10-4.7.0pre9.52:dev"
	compile "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
	//compile "curse.maven:RandomThings-2.2.4:2225310" buggy mcp
	compile "curse.maven:ReAuth-3.5.0:2433392"
	compile "roguelike-dungeons:roguelike:1.7.10:1.5.0b"
	compile "realistic-terrain-generation:RTG:1.7.10:1.1.1.7"
	compile "sonar-core:SonarCore-1.7.10:1.1.3:dev"
	compile "streams:Streams:1.7.10:0.3.4"
	compile "tinkers-construct:TConstruct:1.7.10:1.8.8.build991"
	compile files("lib/TGregworks-1.7.10-1.0.18-deobf.jar")
	compile "tic-tooltips:TiCTooltips:mc1.7.10:1.2.5"
	compile "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
	compile "waila-features:WAILA-features:1.7.10:0.1.0"
	compile "curse.maven:WarpDrive-1.7.10-1.4.2:2578306"
	compile "curse.maven:Wawla-1.0.5.120:2298772"
	compile "curse.maven:WirelessCraftingTerminal-1.7.10-rv3-1.8.7.9b-deobf:2460356"
	compile "zombie-awareness:zombieawareness:1.7.10:1.10"
	compile "ztones:Ztones:1.7.10:2.2.1"
	//compile "curse.maven:[1.7.10]ArmorStatusHUD-client-1.28:2218859"
	//compile "curse.maven:[1.7.10]MoVillages-1.4.2:2309559"
	//compile "curse.maven:[1.7.10]StartingInventory-universal-1.7.10.r03:2218985"
	//compile "curse.maven:[1.7.10]StatusEffectHUD-client-1.27:2218935"
	compile "mrtjp:MrTJPCore:1.7.10-1.0.8.16:dev"
	compile "yuutolib:YuutoLib-1.7.10:1.0.3:dev"
	compile "curse.maven:[1.7.10]bspkrsCore-universal-6.16:2227503"

}

runClient {
	jvmArgs "-Xmx4096m", "-Xms1024m"
}

runServer {
	jvmArgs "-Xmx4096m", "-Xms1024m"
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version': project.version, 'mcversion': project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

task buildInfo {
	def cmd = "git rev-parse --short HEAD"
	def proc = cmd.execute()
	proc.waitFor()
	if (proc.exitValue() == 0) {
		ext.revision = proc.text.trim()
	} else {
		ext.revision = "GITBORK"
	}

	if (System.getenv().BUILD_NUMBER != null) {
		ext.buildNum = "${System.getenv().BUILD_NUMBER}"
	} else {
		def date = new Date().format('yyyyMMddHHmmss')
		ext.buildNum = "DEV.${date}.${project.buildInfo.revision}"
	}
}

ext.artifact_version = 'NFG'
if (System.getenv().ARTIFACT_VERSION == null) {
	artifact_version = "${project.buildInfo.buildNum}"
} else {
	artifact_version = "${System.getenv().ARTIFACT_VERSION}"
}

version = "${version}-${artifact_version}"

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

artifacts {
	archives devJar
	archives sourcesJar
}
